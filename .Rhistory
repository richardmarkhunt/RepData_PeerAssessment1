install.packages("devtools")
library(devtools)
install_github("StatsWithR/statsr")
install.packages("dplyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
library(statsr)
data("arbuthnot")
str (arbuthnot)
arbuthnot
View(arbuthnot)
dim(arbuthnot)
names(arbuthnot)
arbuthnot$boys
?ggplot
arbuthnot$boys + arbuthnot$girls
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
dim(arbuthnot)
head(arbuthnot)
View(arbuthnot)
ggplot(data = arbuthnot, aes(x = year, y = boys)) + geomline()
ggplot(data = arbuthnot, aes(x = year, y = boys)) + geom_line()
data(present)
dim(present)
range(present$year)
present <- present %>% mutate(total = boys + girls)
View(present)
present <- present %>% mutate(prop_boys = boys/total)
ggplot(data = present, aes(x = year, y = prop_boys)) + geom_line()
present <- present %>% mutate(more_boys = boys > girls)
present <- present %>% mutate(prop_boy_girl = boys/girls)
ggplot(data = present, aes(x = year, y = prop_boy_girl)) + geom_line()
setwd("~/Documents/Coursera/Data_science_specialisation/5-Reproducible research/Course project 1")
setwd("~/Documents/Coursera/Data_science_specialisation/5-Reproducible_research/Course_project_1")
activity_data <- read.csv(activity.csv)
activity_data <- read.csv("activity.csv")
head(activity_data)
str(activity_data)
View(activity_data)
library(lattice)
library(lattice)
library(dplyr)
library(ggplot2)
activity_data_ignoreNAs <- filter(activity_data, steps !is.na)
activity_data_ignoreNAs <- filter(activity_data, steps= !is.na)
activity_data_ignoreNAs <- filter(activity_data, steps != "NA")
View(activity_data_ignoreNAs)
View(activity_data)
View(activity_data_ignoreNAs)
activity_data_ignoreNAs %>% summarise(date)
activity_data_ignoreNAs %>% summarise("date")
View(activity_data_ignoreNAs)
activty_data_perday <- activity_data_ignoreNAs %>% summarise(date)
activty_data_perday <- activity_data_ignoreNAs %>% grpoup_by(date) %>% summarise(date)
activty_data_perday <- activity_data_ignoreNAs %>% group_by(date) %>% summarise(date)
View(activity_data_ignoreNAs)
activty_data_perday <- activity_data_ignoreNAs %>% group_by(date) %>% summarise(Total_steps = sum(steps))
View(activty_data_perday)
# retain only those observations where no NA
activity_data_ignoreNAs <- filter(activity_data, steps != "NA")
# create dataframe summarising total steps per day
activty_data_perday <- activity_data_ignoreNAs %>% group_by(date) %>% summarise(Total_steps = sum(steps))
# create a histogram of total steps per day
hist(activty_data_perday$Total_steps, breaks = 10, main = "Histogram of total steps per day", xlab = "Total steps per day", col = "red")
# retain only those observations where no NA
activity_data_ignoreNAs <- filter(activity_data, steps != "NA")
# create dataframe summarising total steps per day
activty_data_perday <- activity_data_ignoreNAs %>% group_by(date) %>% summarise(Total_steps = sum(steps))
# create a histogram of total steps per day
hist(activty_data_perday$Total_steps, breaks = 10, main = "Histogram of total steps per day", xlab = "Total steps per day", col = "blue")
# retain only those observations where no NA
activity_data_ignoreNAs <- filter(activity_data, steps != "NA")
# create dataframe summarising total steps per day
activty_data_perday <- activity_data_ignoreNAs %>% group_by(date) %>% summarise(Total_steps = sum(steps))
# create a histogram of total steps per day
hist(activty_data_perday$Total_steps, breaks = 10, main = "Histogram of total steps per day", xlab = "Total steps per day", col = "lightblue")
mean_steps <- mean(activity_data_perday$Total_steps)
median_steps <- median(activity_data_perday$Total_steps)
mean_steps <- mean(activty_data_perday$Total_steps)
median_steps <- median(activty_data_perday$Total_steps)
mean_steps <- round(mean(activty_data_perday$Total_steps), digits = 0)
median_steps <- median(activty_data_perday$Total_steps)
mean_steps <- round(mean(activty_data_perday$Total_steps), digits = 0)
median_steps <- median(activty_data_perday$Total_steps)
mean_steps <- round(mean(activty_data_perday$Total_steps))
median_steps <- median(activty_data_perday$Total_steps)
View(activty_data_perday)
View(activity_data_ignoreNAs)
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Total_steps = sum(steps))
View(activty_data_perinterval)
View(activty_data_perinterval)
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
View(activty_data_perinterval)
View(activty_data_perinterval)
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
plot(activty_data_perinterval$interval, activty_data_perinterval$steps, type="l",
main="Average number of steps (all days) by 5 min time interval",
xlab="Interval", ylab="Average steps")
View(activty_data_perinterval)
plot(activty_data_perinterval$interval, activty_data_perinterval$Ave_steps, type="l", main="Average number of steps (all days) by 5 min time interval", xlab="Interval", ylab="Average steps")
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
plot(activty_data_perinterval$interval, activty_data_perinterval$Ave_steps, type="l", main="Average No. of steps (all days) by 5 min time interval", xlab="Interval", ylab="Average steps")
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
plot(activty_data_perinterval$interval, activty_data_perinterval$Ave_steps, type="l", main="Average No. of steps (all days) by 5 min interval", xlab="Interval", ylab="Average steps")
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
plot(activty_data_perinterval$interval, activty_data_perinterval$Ave_steps, type = "l", main = "Average No. of steps (all days) by 5 min interval", xlab = "Interval", ylab = "Average steps")
axis(1, at = seq(0, 2400, by = 100))
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
plot(activty_data_perinterval$interval, activty_data_perinterval$Ave_steps, type = "l", main = "Average No. of steps (all days) by 5 min interval", xlab = "Interval", ylab = "Average steps")
axis(1, at = seq(0, 2400, by = 200))
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
plot(activty_data_perinterval$interval, activty_data_perinterval$Ave_steps, type = "l", main = "Average No. of steps (all days) by 5 min interval", xlab = "Interval", ylab = "Average steps")
axis(1, at = seq(0, 2400, by = 100), cex.axis = 0.8)
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
plot(activty_data_perinterval$interval, activty_data_perinterval$Ave_steps, type = "l", main = "Average No. of steps (all days) by 5 min interval", xlab = "Interval", ylab = "Average steps")
axis(1, at = seq(0, 2400, by = 100), cex.axis = 0.4)
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
plot(activty_data_perinterval$interval, activty_data_perinterval$Ave_steps, type = "l", main = "Average No. of steps (all days) by 5 min interval", xlab = "Interval", ylab = "Average steps")
axis(1, at = seq(0, 2400, by = 100), cex.axis = 0.6)
# create a dataframe summarising total steps per interval
activty_data_perinterval <- activity_data_ignoreNAs %>% group_by(interval) %>% summarise(Ave_steps = mean(steps))
# crate a time series plot of average steps per interval over all days
plot(activty_data_perinterval$interval, activty_data_perinterval$Ave_steps, type = "l", main = "Average No. of steps (all days) by 5 min interval", , xaxt = "n", xlab = "Interval", ylab = "Average steps")
axis(1, at = seq(0, 2400, by = 100), cex.axis = 0.6)
activity_data_MaxSteps <- activty_data_perinterval[which.max(activty_data_perinterval$Ave_steps),]
View(activity_data_MaxSteps)
View(activity_data)
total_NAs <- activity_data %>% count(steps, wt = NA)
View(total_NAs)
View(total_NAs)
View(activity_data)
total_NAs<-sum(is.na(activity_data))
View(activty_data_perinterval)
View(activty_data_perinterval)
View(activity_data_ignoreNAs)
View(activity_data)
View(activty_data_perinterval)
install.packages(zoo)
install.packages("zoo")
library(zoo)
test_data <- activity_data
test_data$steps <- ave(test_data$steps, test_data$interval, FUN=na.aggregate)
View(test_data)
View(activity_data)
View(test_data)
View(activty_data_perinterval)
View(test_data)
View(activty_data_perinterval)
# replicate the activity_data dataframe to be used for NA removal
activity_data_rep <- activity_data
# use Zoo package with ave & na.aggregrate functions to replace NA's with the mean for the corresponding 5-minute interval
activity_data_rep$steps <- ave(activity_data_rep$steps, activity_data_rep$interval, FUN=na.aggregate)
View(activity_data_rep)
mean_steps_NAremoved <- round(mean(activty_data_rep_perday$Total_steps))
median_steps_NAremoved <- median(activty_data_rep_perday$Total_steps)
# create dataframe summarising total steps per day
activty_data_rep_perday <- activity_data_rep %>% group_by(date) %>% summarise(Total_steps = sum(steps))
# create a histogram of total steps per day
hist(activty_data_rep_perday$Total_steps, breaks = 10, main = "Histogram of total steps per day", xlab = "Total steps per day", col = "lightgreen")
mean_steps_NAremoved <- round(mean(activty_data_rep_perday$Total_steps))
median_steps_NAremoved <- median(activty_data_rep_perday$Total_steps)
mean_steps_NAremoved <- round(mean(activty_data_rep_perday$Total_steps))
median_steps_NAremoved <- round(median(activty_data_rep_perday$Total_steps))
activity_data_rep$weekday <- factor(ifelse(wday(activity_data_rep$date) %in% 2:6, "weekday", "weekend"), levels = c("weekday", "weekend"))
install.packages("lubridate")
library(lubridate)
activity_data_rep$weekday <- factor(ifelse(wday(activity_data_rep$date) %in% 2:6, "weekday", "weekend"), levels = c("weekday", "weekend"))
setwd("~/Documents/Coursera/Data_science_specialisation/5-Reproducible_research/Course_project_1/Git_repository")
setwd("~/Documents/Coursera/Data_science_specialisation/5-Reproducible_research/Course_project_1/Git_repository")
